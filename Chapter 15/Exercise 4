// -----------------------------------------------------------------------------
// https://lptcp.blogspot.com/
// Chapter 15 - Exercise 4
/*
	Graph a sine(sin()),  cosine (cos()), the sum of those (sin(x)+cos(x)), and 
	the sum of the squares of those (sin(x)*sin(x)+cos(x)*cos(x)) on a single 
	graph. Do provide axes and labels.
*/
// https://github.com/l-paz91/principles-practice/tree/master/Graphics%20Files
// -----------------------------------------------------------------------------

//--INCLUDES--//
#include "Simple_window.h"
#include "Graph.h"

using namespace Graph_lib;

// -----------------------------------------------------------------------------

double sumSinCos(double x)
{
	return sin(x)*sin(x) +cos(x)*cos(x);
}

// -----------------------------------------------------------------------------

int main()
{
	const int xmax = 600;
	const int ymax = 600;
	const int yorigin = ymax / 2;
	const int xorigin = xmax / 2;
	const Point origin{ double(xorigin), double(yorigin) };

	const int axisLength = 400;
	const int notches = 400 / 20;

	const double xscale = 20;
	const double yscale = 20;

	double rangeMin = -10;
	double rangeMax = 11;

	Simple_window win{ Point{100,100}, xmax, ymax, "Function Graphs - Exercise 4" };

	// -----------------------------------------------------------------------------
	
	Axis xaxis(Axis::x, Point(100, yorigin), axisLength, notches, "x");
	win.attach(xaxis);
	Axis yaxis(Axis::y, Point(xorigin, axisLength + 100), axisLength, notches, "y");
	win.attach(yaxis);

	// -----------------------------------------------------------------------------

	Function f_sin{ sin, rangeMin, rangeMax, origin, axisLength, xscale, yscale };
	f_sin.set_color(Color::coral);
	Text tsin(Point{ f_sin.point(0).x - 20, f_sin.point(0).y}, "Sin");
	tsin.set_color(Color::coral);
	win.attach(f_sin);
	win.attach(tsin);

	// -----------------------------------------------------------------------------

	Function f_cos{ cos, rangeMin, rangeMax, origin, axisLength, xscale, yscale };
	f_cos.set_color(Color::blue);
	Text tcos(Point{ f_cos.point(0).x - 20, f_cos.point(0).y }, "Cos");
	tcos.set_color(Color::blue);
	win.attach(f_cos);
	win.attach(tcos);

	// -----------------------------------------------------------------------------

	Function f_sumSinCos{ sumSinCos, rangeMin, rangeMax, origin, axisLength, xscale, yscale };
	f_sumSinCos.set_color(Color::green);
	Text tsumSinCos(Point{ f_sumSinCos.point(0).x, f_sumSinCos.point(0).y - 10 }, "SumSinCos");
	tsumSinCos.set_color(Color::green);
	win.attach(f_sumSinCos);
	win.attach(tsumSinCos);

	// -----------------------------------------------------------------------------

	win.wait_for_button();
}

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
