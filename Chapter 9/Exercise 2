// -----------------------------------------------------------------------------
//
// C9 - Exercise 2
// 
// -----------------------------------------------------------------------------

#include "std_lib_facilities.h"

// -----------------------------------------------------------------------------

class Name_Pairs
{
public:
	Name_Pairs() {}			//default constructor
	~Name_Pairs() {}		//destructor

	void read_names();		//reads a series of names
	void read_ages();		//reads ages for each name
	void print() const;		//print out name_age pairs
	void sortByName();		//sorts by name and adjusts ages to match

private:
	vector<string> names;
	vector<double> ages;
};

// -----------------------------------------------------------------------------

void Name_Pairs::read_names()
{
	string temp;
	cout << "Please enter a name: ";
	cin >> temp;
	bool match(false);

	for (int i = 0; i < names.size(); ++i)
	{
		if (temp == names[i])
		{
			match = true;
			cout << "That name has already been entered. Try again." << endl;
			read_names();
		}
	}
	
	//only push back if cin is ok and there were no matches
	if(cin && !match)
		names.push_back(temp);
}

// -----------------------------------------------------------------------------

void Name_Pairs::read_ages()
{
	double temp;
	cout << "Their age: ";
	cin >> temp;

	if (cin)
		ages.push_back(temp);
}

// -----------------------------------------------------------------------------

void Name_Pairs::print() const
{
	for (int i = 0; i < names.size(); ++i)
		cout << "Name: " << names[i] << "	Age: " << ages[i] << endl;

	cout << endl;
}

// -----------------------------------------------------------------------------

void Name_Pairs::sortByName()
{
	vector<string> tempS = names;
	vector<double> tempD = ages;

	sort(tempS.begin(), tempS.end());
	for (int i = 0; i < names.size(); ++i)
	{
		for (int n = 0; n < ages.size(); ++n)
		{
			if (tempS[i] == names[n])
				tempD[i] = ages[n];
		}
	}

	names = tempS;
	ages = tempD;
}

// -----------------------------------------------------------------------------

int main()
{
	Name_Pairs np;

	cout << "Please enter names and ages. Enter ctrl+z+enter to stop." << endl;

	//cin will not be ok if ctrl+z is entered
	while (cin)
	{
		np.read_names();
		np.read_ages();
	}

	cout << endl;

	np.print();
	np.sortByName();
	np.print();

	keep_window_open();
	return 0;
}

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
